package ${packageName}.mapper;

import java.util.List;
import ${packageName}.domain.${ClassName};
#if($table.sub)
import ${packageName}.domain.${subClassName};
#end

/**
 * ${functionName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
public interface ${ClassName}Mapper 
{
    /**
     * ${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * ${functionName}
     * 
     * @param ${className} ${functionName}
     * @return ${functionName}
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * ${functionName}
     * 
     * @param ${className} ${functionName}
     * @return
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * ${functionName}
     * 
     * @param ${className} ${functionName}
     * @return
     */
    public int update${ClassName}(${ClassName} ${className});

    /**
     * ${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return
     */
    public int delete${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * ${functionName}
     * 
     * @param ${pkColumn.javaField}s
     * @return
     */
    public int delete${ClassName}ByIds(String[] ${pkColumn.javaField}s);
#if($table.sub)

    /**
     * ${subTable.functionName}
     * 
     * @param customerIds
     * @return
     */
    public int delete${subClassName}By${subTableFkClassName}s(String[] ${pkColumn.javaField}s);
    
    /**
     * ${subTable.functionName}
     * 
     * @param ${subclassName}List ${subTable.functionName}List
     * @return
     */
    public int batch${subClassName}(List<${subClassName}> ${subclassName}List);
    

    /**
     * ${functionName}ID delete ${subTable.functionName} info
     *
     */
    public int delete${subClassName}By${subTableFkClassName}(${pkColumn.javaType} ${pkColumn.javaField});
#end
}
